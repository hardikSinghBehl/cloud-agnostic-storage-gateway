# Server Configuration
server.port=8080
spring.application.name=strongbox

# AWS Configuration
com.behl.strongbox.aws.enabled=${AWS_ENABLED:false}
com.behl.strongbox.aws.access-key=${AWS_ACCESS_KEY:<IAM Access-key Goes Here>}
com.behl.strongbox.aws.secret-access-key=${AWS_SECRET_KEY:<IAM Secret Access Key Goes Here>}
com.behl.strongbox.aws.s3.bucket-name=${AWS_BUCKET_NAME:<Default S3 Bucket Name Goes Here>}
com.behl.strongbox.aws.s3.region=${AWS_BUCKET_REGION:<Region of configured S3 Bucket Goes Here>}

# Azure Configuration
com.behl.strongbox.azure.enabled=${AZURE_ENABLED:false}
com.behl.strongbox.azure.container=${AZURE_CONTAINER_NAME:<Container Name Goes Here>}
com.behl.strongbox.azure.connection-string=${AZURE_CONNECTION_STRING:<Connection String Goes Here>}
com.behl.strongbox.azure.sas-token=${AZURE_SAS_TOKEN:<SAS Token Goes Here>}
com.behl.strongbox.azure.sas-url=${AZURE_SAS_URL:<SAS URL Goes Here>}

# GCP Configuration
com.behl.strongbox.gcp.enabled=${GCP_ENABLED:false}
com.behl.strongbox.gcp.project-id=${GCP_PROJECT_ID:<GCP Project-ID Goes Here>}
com.behl.strongbox.gcp.bucket-name=${GCP_BUCKET_NAME:<GCP Bucket name Goes Here>}
com.behl.strongbox.gcp.authentication-key-path=${GCP_AUTH_KEY_PATH:./gcp-auth-key.json}

# Digital Ocean Configuration
com.behl.strongbox.digital-ocean.spaces.enabled=${DIGITAL_OCEAN_ENABLED:false}
com.behl.strongbox.digital-ocean.spaces.access-key=${DIGITAL_OCEAN_ACCESS_KEY:<Digital Ocean Access Key Goes Here>}
com.behl.strongbox.digital-ocean.spaces.secret-key=${DIGITAL_OCEAN_SECRET_KEY:<Digital Ocean Secret Key Goes Here>}
com.behl.strongbox.digital-ocean.spaces.bucket-name=${DIGITAL_OCEAN_BUCKET_NAME:<Digital Ocean Spaces bucket Name Goes Here>}
com.behl.strongbox.digital-ocean.spaces.endpoint=${DIGITAL_OCEAN_ENDPOINT:<Digital Ocean Spaces bucket endpoint Goes Here>}
com.behl.strongbox.digital-ocean.spaces.region=${DIGITAL_OCEAN_REGION:<Digital Ocean Spaces Bucket Region Goes Here>}

# Wasabi Configuration
com.behl.strongbox.wasabi.enabled=${WASABI_ENABLED:false}
com.behl.strongbox.wasabi.access-key=${WASABI_ACCESS_KEY:<Wasabi Access Key Goes Here>}
com.behl.strongbox.wasabi.secret-key=${WASABI_SECRET_KEY:<Wasabi Secret Key Goes Here>}
com.behl.strongbox.wasabi.bucket-name=${WASABI_BUCKET_NAME:<Wasabi Bucket Name Goes Here>}
com.behl.strongbox.wasabi.region=${WASABI_BUCKET_REGION:<Region corresponding to configured Wasabi Bucket Goes Here>}

# S3 Ninja Emulator Configuration
com.behl.strongbox.aws.emulated.enabled=${S3_NINJA_ENABLED:false}
com.behl.strongbox.aws.emulated.access-key=${S3_NINJA_ACCESS_KEY:AKIAIOSFODNN7EXAMPLE}
com.behl.strongbox.aws.emulated.secret-access-key=${S3_NINJA_SECRET_KEY:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}
com.behl.strongbox.aws.emulated.s3.endpoint=${S3_NINJA_ENDPOINT:http://localhost:9000}
com.behl.strongbox.aws.emulated.s3.bucket-name=${S3_NINJA_BUCKET_NAME:cloud-agnostic-storage-poc}

# Datasource Configuration
spring.data.mongodb.uri=${MONGODB_URI:mongodb://localhost:27017/strongbox}
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#JWT
com.behl.strongbox.jwt.secret-key=${JWT_SECRET_KEY:093617ebfa4b9af9700db274ac204ffa34195494d97b9c26c23ad561de817926}
com.behl.strongbox.jwt.access-token.validity=${ACCESS_TOKEN_VALIDITY_DAYS:1}
com.behl.strongbox.jwt.refresh-token.validity=${REFRESH_TOKEN_VALIDITY_DAYS:10}

# OpenAPI Configuration
com.behl.strongbox.open-api.title=StrongBox
com.behl.strongbox.open-api.description=Spring-boot application exposing APIs to act as a gateway which integrates cloud based storage solution(s) like AWS, Azure and GCP
com.behl.strongbox.open-api.api-version=1.0.0
com.behl.strongbox.open-api.contact.name=Hardik Singh Behl
com.behl.strongbox.open-api.contact.email=hardik.behl7444@gmail.com
com.behl.strongbox.open-api.contact.url=https://www.linkedin.com/in/hardikSinghBehl
com.behl.strongbox.open-api.security.name=AuthenticationBearer
com.behl.strongbox.open-api.security.scheme=bearer
com.behl.strongbox.open-api.security.bearer-format=JWT

# Multipart Size Configuration
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB