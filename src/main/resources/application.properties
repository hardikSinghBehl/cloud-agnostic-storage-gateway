# Server Configuration
server.port=8080
spring.application.name=strongbox

# AWS Configuration
com.behl.strongbox.aws.enabled=false
com.behl.strongbox.aws.access-key=<IAM Access-key Goes Here>
com.behl.strongbox.aws.secret-access-key=<IAM Secret Access Key Goes Here>
com.behl.strongbox.aws.s3.bucket-name=<Default S3 Bucket Name Goes Here>
com.behl.strongbox.aws.s3.region=<Region of configured S3 Bucket Goes Here>

# Azure Configuration
com.behl.strongbox.azure.enabled=false
com.behl.strongbox.azure.container=<Container Name Goes Here>
com.behl.strongbox.azure.connection-string=<Connection String Goes Here>
com.behl.strongbox.azure.sas-token=<SAS Token Goes Here>
com.behl.strongbox.azure.sas-url=<SAS URL Goes Here>

# GCP Configuration
com.behl.strongbox.gcp.enabled=false
com.behl.strongbox.gcp.project-id=<GCP Project-ID Goes Here>
com.behl.strongbox.gcp.bucket-name=<GCP Bucket name Goes Here>
com.behl.strongbox.gcp.authentication-key-path=./gcp-auth-key.json

# Digital Ocean Configuration
com.behl.strongbox.digital-ocean.spaces.enabled=false
com.behl.strongbox.digital-ocean.spaces.access-key=<Digital Ocean Access Key Goes Here>
com.behl.strongbox.digital-ocean.spaces.secret-key=<Digital Ocean Secret Key Goes Here>
com.behl.strongbox.digital-ocean.spaces.bucket-name=<Digital Ocean Spaces bucket Name Goes Here>
com.behl.strongbox.digital-ocean.spaces.endpoint=<Digital Ocean Spaces bucket endpoint Goes Here>
com.behl.strongbox.digital-ocean.spaces.region=<Digital Ocean Spaces Bucket Region Goes Here>

# Wasabi Configuration
com.behl.strongbox.wasabi.enabled=false
com.behl.strongbox.wasabi.access-key=<Wasabi Access Key Goes Here>
com.behl.strongbox.wasabi.secret-key=Wasabi Secret Key Goes Here
com.behl.strongbox.wasabi.bucket-name=Wasabi Bucket Name Goes Here
com.behl.strongbox.wasabi.region=Region corresponding to configured Wasabi Bucket Goes Here

# S3 Ninja Emulator Configuration
com.behl.strongbox.aws.emulated.enabled=false
com.behl.strongbox.aws.emulated.access-key=${S3_NINJA_ACCESS_KEY:AKIAIOSFODNN7EXAMPLE}
com.behl.strongbox.aws.emulated.secret-access-key=${S3_NINJA_SECRET_KEY:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}
com.behl.strongbox.aws.emulated.s3.endpoint=${S3_NINJA_ENDPOINT:http://localhost:9000}
com.behl.strongbox.aws.emulated.s3.bucket-name=${spring.application.name}

# Datasource Configuration
spring.data.mongodb.uri=${MONGODB_URI:mongodb://localhost:27017/strongbox}
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#JWT
com.behl.strongbox.jwt.secret-key=093617ebfa4b9af9700db274ac204ffa34195494d97b9c26c23ad561de817926
com.behl.strongbox.jwt.access-token.validity=1
com.behl.strongbox.jwt.refresh-token.validity=10

# OpenAPI Configuration
com.behl.strongbox.open-api.title=StrongBox
com.behl.strongbox.open-api.description=Spring-boot application exposing APIs to act as a gateway which integrates cloud based storage solution(s) like AWS, Azure and GCP
com.behl.strongbox.open-api.api-version=1.0.0
com.behl.strongbox.open-api.contact.name=Hardik Singh Behl
com.behl.strongbox.open-api.contact.email=hardik.behl7444@gmail.com
com.behl.strongbox.open-api.contact.url=https://www.linkedin.com/in/hardikSinghBehl
com.behl.strongbox.open-api.security.name=AuthenticationBearer
com.behl.strongbox.open-api.security.scheme=bearer
com.behl.strongbox.open-api.security.bearer-format=JWT

# Multipart Size Configuration
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB